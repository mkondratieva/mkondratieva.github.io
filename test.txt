0. В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется  определить,  можно ли найти в последовательности N различных 
элементов?
Положим S=0, если количество различных элементов в последовательности
{a} меньше N и S=1 в противном случае.

Например, для файла, в котором записаны числа
5 
1 2 3 1 5 2 3   значение S равно 0, а для
4
1 2 3 1 5 2 3  S=1.

Полученное число S следует записать в файл  data.res.

В случае успешного выполнения задачи функция  main должна завершаться с
 кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.

Определение.

N-Предъокрестностью  элемента x в последовательности  a_i, i=1,...,K
назовем ее участок  длины не больше, чем N, расположенный перед 
элементом x.
Например, в последовательности  {1,2,3,4,5,6}  N-предъокрестностью
элемента 4 является участок {1,2,3} для N=3,4,5..., а его 
2-предъокрестностью является уучасток {2,3}.  
В частности, 1-предъокрестнось -- это предыдущий элемент для х.


1. В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется  определить,  можно ли найти в последовательности 
одинаковые элементы  a_i=a_j, для которых выполняется условие 
0<|i-j|<=N?
Положим S=0, если в N-предъокрестности
каждого элемента х все числа не равны х и S=1 в противном случае.

Например, для файла, в котором записаны числа
3 
1 2 3 4 5 1 3   значение S равно 0, а для
4
1 2 3 4 5 1 3  S=1.

Полученное число S следует записать в файл  data.res.

В случае успешного выполнения задачи функция  main должна завершаться с
 кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.

2. В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется  найти максимальное число из элементов   
последовательности, удовлетворяющих условиям: 
a_i=a_j для некоторых  0<|i-j|<=N. Если чисел, удовлетворяющих
такому условию, нет,  положить S=0.

Например, для файла, в котором записаны числа
4 
1 3 4 5 1 3 2 2   значение S равно 3.

Полученное число S следует записать в файл  data.res.

В случае успешного выполнения задачи функция  main должна завершаться с
 кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.

Замечание.
В массиве b сохранить N-предъокрестность текущего элемента 
последовательности а, и если в ней встречается этот элемент, 
сравнить его с S.

3.  Для самостоятельного разбора.
В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется  найти сумму (=S) таких элементов  x, для которых в  их
N-предъокрестности 
существуют  b,c: b<=x<=c.
Если чисел, удовлетворяющих
такому условию, нет,  положить S=0.

Например, для файла, в котором записаны числа
4 
1 3 4 5 2 1 6   значение S равно 3.

Полученное число S следует записать в файл  data.res.

В случае успешного выполнения задачи функция  main должна завершаться с
 кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.


4. В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется создать массив {b_j}, j=0,...,N целых чисел, где
{b_j} равно количеству элементов последовательности {a}, 
равных j по модулю N. 

Созданный массив следует упорядочить по убыванию и записать в файл 
data.res.

Например, для файла, в котором записаны числа
4 
1 3 4 5 8 1 9 
файл data.res будет иметь вид
4 2 1 0

В случае успешного выполнения задачи функция  main должна завершаться с
кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.

5.  Для самостоятельного разбора.
В файле  data.dat записано натуральное число  N и далее 
последовательность   целых чисел {a_i}, i=1,...,K неизвестной длины.
Требуется создать массив {b_j}, j=0,...,n-1, n<=N, 
содержащий  максимально возможное количество
локальных максимумов последовательности {a_i}, i=1,...,k. 
Варианты задачи: а) записать в массив первые  локальные максимумы и б) последние.
 
Созданный массив следует упорядочить по возрастанию и записать в файл 
data.res.

Например, для файла, в котором записаны числа
4 
11 11 11  3 4 5 8 8 1 11 1 2 1 3 3
файл data.res в варианте а) будет иметь вид
11 8 11 2
а в варианте б)
8 11 2 3

В случае успешного выполнения задачи функция  main должна завершаться с
кодом возврата 0. В случае неуспеха  (невозможности открыть файлы, 
в случае N<1, в случае наличия в файле менее двух чисел) функция  main должна 
завершаться с кодом возврата -1.

Данные из файла разрешается читать только один раз. В программе можно создавать 
только один массив длины  N и произвольное количество 
отдельных переменных. Числа в файле разделяются пробелами и символами перехода на 
следующую строку.

Замечание.
В варианте б) после заполнения массива (т.е. когда в последовательности найдены
N локальных максимумов) следует "обновлять скользящее окно" при нахождении очередного локального максимума.

